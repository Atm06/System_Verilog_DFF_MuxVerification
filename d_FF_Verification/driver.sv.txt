
`define DRIV v_i.c_b_m.c_b
class driver;
  
  int no_of_trans;
  
  virtual intf v_i;
  
  mailbox g2d;
  
  function new(virtual intf v_i, mailbox g2d);
    this.v_i = v_i;
    this.g2d = g2d;
  endfunction
  
  task reset;
    wait(v_i.reset);
    $display("<< Driver >>");
    $display("---- Reset started ----");
    `DRIV.D <= 0;
    wait(!v_i.reset);
    $display("<< Driver >>");
    $display("---- Reset ended ----");
  endtask
  
  task run;
    forever begin
      transaction t1;
      g2d.get(t1);
      @(posedge v_i.c_b_m.clk);
      `DRIV.D <= t1.D;
      @(posedge v_i.c_b_m.clk);
      t1.Q = `DRIV.Q;
      t1.Qn = `DRIV.Qn;
   
      
      t1.display("<< Driver >>");
      
      no_of_trans++;
    end
  endtask
  
  task main;
    forever begin
      fork
        wait(v_i.reset);
        run();
      join_any
      disable fork;
    end
  endtask
  
endclass
